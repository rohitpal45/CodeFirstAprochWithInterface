@model RohitDI_Mvc.Models.Registration

@if (TempData["MessageRegistration"] != null)
{
    <p class="alert alert-success" id="successMessage">@TempData["MessageRegistration"]</p>
}
@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.RegistrationID)
    <div class="form-horizontal">
        <h4>Registration</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-lg-4">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @maxlength = 40, @onkeypress = "return onlyspecchar(event);" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.Mobileno, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.TextBoxFor(model => model.Mobileno, new { @class = "form-control", @maxlength = 10, @onkeydown = "return OnlyNumeric(this);" })
                @Html.ValidationMessageFor(model => model.Mobileno, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control", @maxlength = 50 })
                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="clearfix"></div>
            <div class="col-lg-4" style="margin-top:20px;">

                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.RadioButtonFor(model => model.Gender, "M") @Html.Label("", "Male")
                @Html.RadioButtonFor(model => model.Gender, "F") @Html.Label("", "Female")
                <br />
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Birthdate, new { @class = "form-control",@placeholder="2001-25-11" })
                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.TextBoxFor(model => model.Username, new { @class = "form-control", @maxlength = 20, @onkeypress = "return onlyspecchar(event);", @onblur = "CheckUsernameExists();" })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @maxlength = 30, })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>
    <div class="row">
        <br />
        <div class="col-lg-4">
            <input type="submit" value="Create User" name="Command" class="btn btn-success" />
            <input type="submit" value="Update User" name="Command" class="btn btn-primary" />
            @Html.ActionLink("Clear", "Index", "Home", null, new { @class = "btn btn-danger" })

            @Html.ActionLink("All Users", "listWisedata", "Home", null, new { @class = "btn btn-info" })
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
